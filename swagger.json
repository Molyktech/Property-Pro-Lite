{
  "swagger": "2.0",
  "info": {
    "description": "Property Pro Lite is a platform where people can create and/or search properties for sale or rent",
    "version": "1.0.0",
    "title": "Property Pro Lite",
    "contact": {
      "email": "modupeadebayo001@gmail.com"
    },
    "license": {
      "name": "Propert-Pro Lite API Documentation",
      "url": "https://propertymo.herokuapp.com/api-docs"
    }
  },
  "host": "propertymo.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Property Pro Lite",
      "description": "Evertything Real Estate",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://molyktech.github.io/Property-Pro-Lite/UI/"
      }
    },
    {
      "name": "Authentication",
      "description": "End points for user sign up and sign in to the Property Pro Lite application"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth": {
      "get": {
        "tags": [
          "get user"
        ],
        "summary": "get users application",
        "description": "",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "422": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign up/register a new user into the application",
        "description": "This is an endpoint that allows a user sign up to the Property-pro Lite",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "422": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a registered user",
        "description": "This an endpoint that allows registered users to sign in to the Property-Pro Lite",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "422": {
            "description": "Unprocessible entity"
          }
        }
      }
    },
    "/property": {
      "get": {
        "tags": [
          "Get Properties"
        ],
        "summary": "Get all property adverts",
        "description": "An endpoint that fetches all adverts.",
        "operationId": "getProperty",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Type of property to be fetched",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Post Properties"
        ],
        "summary": "Post a property adverts",
        "description": "An Endpoint for posting a property advert.",
        "operationId": "postProperty",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Authorization token to show that user is registered or logged in",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of property that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Updated state of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Updated city of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Updated address of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Updated type of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Updated image of the property advert",
            "required": true,
            "type": "file"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the property advert",
            "required": true,
            "type": "string",
            "enum": [
              "available",
              "sold"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "deprecated": false
      }
    },
    "/property/{id}": {
      "get": {
        "tags": [
          "Get one Property"
        ],
        "summary": "Find a property by ID",
        "description": "Returns a single property",
        "operationId": "getPropertyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of property to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token to show that user is registered or logged in",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Properties"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Property not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Update a property advert"
        ],
        "summary": "Updates a property advert in the store with form data",
        "description": "An endpoint for updating a property advert",
        "operationId": "updatePropertyById",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "description": "Authorization token to show that user is registered or logged in",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of property that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Updated state of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Updated city of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Updated address of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Updated type of the property advert",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Updated image of the property advert",
            "required": true,
            "type": "file"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the property advert",
            "required": true,
            "type": "string",
            "enum": [
              "available",
              "sold"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "Delete a property"
        ],
        "summary": "Deletes a property adverty",
        "description": "An endpoint that allows user to delete a propety advert posted by him or her",
        "operationId": "deletePropertyByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Property id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Property not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "janet"
        },
        "lastName": {
          "type": "string",
          "example": "tamer"
        },
        "email": {
          "type": "string",
          "example": "janetemar@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "janedoeria"
        },
        "phoneNumber": {
          "type": "string",
          "example": "070-655-70794"
        },
        "address": {
          "type": "string",
          "example": "lekki phase one"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string",
          "example": "janetemar@gmail.con"
        },
        "password": {
          "type": "string",
          "example": "janedoeria"
        }
      }
    },
    "Properties": {
      "type": "object",
      "example": {
        "state": "Lagos",
        "city": "Ikoyi",
        "address": "No. 4 Alexander Road, Lagos, Nigeria",
        "type": "2 bedroom",
        "image": "https://via.placeholder.com/250/92c952",
        "price": 1500000,
        "createdon": "2019 M06 30 14:08"
      },
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "available",
            "sold"
          ]
        },
        "price": {
          "type": "integer"
        },
        "created_on": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}